// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[6..8], a=s0, b=s1, c=s2, d=s3, e=s4, f=s5, g=s6, h=s7);

    RAM64(in=in, load=s0, address=address[0..5], out=q0);
    RAM64(in=in, load=s1, address=address[0..5], out=q1);
    RAM64(in=in, load=s2, address=address[0..5], out=q2);
    RAM64(in=in, load=s3, address=address[0..5], out=q3);
    RAM64(in=in, load=s4, address=address[0..5], out=q4);
    RAM64(in=in, load=s5, address=address[0..5], out=q5);
    RAM64(in=in, load=s6, address=address[0..5], out=q6);
    RAM64(in=in, load=s7, address=address[0..5], out=q7);

    Mux8Way16(a=q0, b=q1, c=q2, d=q3, e=q4, f=q5, g=q6, h=q7, sel=address[6..8], out=out);
}